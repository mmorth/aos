#!/usr/bin/env python3
"""
A rudimentary script to help in generating the set of Typescript files
that will be generated by a given .fbs file, to make it easier to write
BUILD files. This could likely be implemented in a more Bazely way, but
was sufficient to refactor the existing code-base.

Usage
$ tools/ts/generate_flatbuffer_ts_library.py path/to/schema.fbs
"""

import sys
import json

fbs_data = []


def namespace_path(namespace):
    return namespace.replace(".", "/").replace("_", "-")


def type_to_file(namespace, typename):
    filename = namespace_path(namespace) + "/"
    prior_lowercase = False
    for index in range(len(typename)):
        char = typename[index:index + 1]
        if prior_lowercase and char.isupper():
            filename += "-"
            prior_lowercase = False
        filename += char.lower()
        if char.islower():
            prior_lowercase = True
    filename += ".ts"
    return filename


file_filenames = {}

for file in sys.argv[1:]:
    with open(file) as fbs:
        namespace = None
        types = []
        filenames = []
        for line in fbs:
            if line.startswith("namespace"):
                assert namespace == None, "only support one namespace"
                namespace = line.split(" ")[1].rstrip(";\n")
                filenames.append(namespace_path(namespace) + ".ts")
            if line.startswith("union") or line.startswith(
                    "enum") or line.startswith("struct") or line.startswith(
                        "table"):
                types.append(line.split(" ")[1].rstrip(":"))
                filenames.append(type_to_file(namespace, types[-1]))

        file_filenames[file[:-4]] = filenames
        # Print out the ts_files entry to place in the BUILD ilf.e
        print(f"ts_files = {json.dumps(filenames)},")

# Print out a dictionary that matches the format oused by scouting/webserver/requests/messages/BUILD
print(json.dumps(file_filenames))
