load(
    ":apache2.bzl",
    apache2_debs = "files",
)
load(
    ":gtk_runtime.bzl",
    gtk_runtime_debs = "files",
)
load(
    ":libusb.bzl",
    libusb_debs = "files",
)
load(
    ":mingw_compiler.bzl",
    mingw_compiler_debs = "files",
)
load(":packages.bzl", "download_packages", "generate_deb_tarball")
load(
    ":phoenix6.bzl",
    phoenix6_debs = "files",
)
load(
    ":postgresql_amd64.bzl",
    postgresql_amd64_debs = "files",
)
load(
    ":rsync.bzl",
    rsync_debs = "files",
)
load(
    ":ssh.bzl",
    ssh_debs = "files",
)
load(
    ":xvfb_amd64.bzl",
    xvfb_amd64_debs = "files",
)

package(default_visibility = ["//visibility:public"])

py_binary(
    name = "download_packages",
    srcs = [
        "download_packages.py",
    ],
    main = "download_packages.py",
    target_compatible_with = ["@platforms//os:linux"],
)

download_packages(
    name = "download_apache2_packages",
    excludes = [
        "libaprutil1-dbd-mysql",
        "libaprutil1-dbd-odbc",
        "libaprutil1-dbd-pgsql",
        "libaprutil1-dbd-freetds",
        "libstdc++6",
        "lsb-base",
        "debconf",
        "libc6-dev",
    ],
    force_includes = [
        "libaprutil1",
    ],
    packages = [
        "apache2",
    ],
)

download_packages(
    name = "download_rsync_packages",
    excludes = [
    ],
    packages = [
        "rsync",
    ],
)

download_packages(
    name = "download_ssh_packages",
    excludes = [
        "libcbor0.8",
        "libsemanage2",
        "libsepol2",
    ],
    packages = [
        "ssh",
    ],
)

download_packages(
    name = "download_gtk_runtime",
    excludes = [
        "libstdc++6",
        "lsb-base",
        "libglib2.0-dev-bin",
        "fonts-freefont",
        "gsettings-backend",
        "libpng-dev",
        "libz-dev",
        "libstdc++-dev",
        "libc6-dev",
    ],
    # Since "libglib2.0-0" pulls in glibc, we need to forcibly remove it again.
    force_excludes = [
        "libc6",
        "libgcc-s1",
    ],
    force_includes = [
        "libglib2.0-0",
    ],
    packages = [
        "gir1.2-gtk-3.0",
        "libgtk-3-dev",
        "librsvg2-common",
    ],
)

download_packages(
    name = "download_postgresql_deps",
    excludes = [
        "adduser",
        "debconf",
        "debconf-2.0",
        "libsystemd0",
        "lsb-base",
        "libstdc++6",
        "libc-bin",
        "libc-l10n",
        "netbase",
        "ucf",
        "locales",
        "locales-all",
    ],
    packages = [
        "postgresql",
    ],
    target_compatible_with = ["@platforms//os:linux"],
)

download_packages(
    name = "download_libusb_deps",
    packages = [
        "libusb-0.1-4",
        "libusb-1.0-0",
        "libusb-1.0-0-dev",
        "libusb-dev",
    ],
    target_compatible_with = ["@platforms//os:linux"],
)

download_packages(
    name = "download_mingw_compiler_deps",
    packages = [
        "g++-mingw-w64-x86-64",
    ],
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "phoenix6",
    files = phoenix6_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "apache2",
    files = apache2_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "postgresql_amd64",
    files = postgresql_amd64_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "rsync",
    files = rsync_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "ssh_v3",
    files = ssh_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "libusb",
    files = libusb_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "mingw_compiler",
    files = mingw_compiler_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

generate_deb_tarball(
    name = "gtk_runtime",
    files = gtk_runtime_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

download_packages(
    name = "download_xvfb_packages",
    excludes = [
        "libglx-mesa0",
    ],
    packages = [
        "xvfb",
    ],
)

generate_deb_tarball(
    name = "xvfb_amd64",
    files = xvfb_amd64_debs,
    target_compatible_with = ["@platforms//os:linux"],
)

exports_files([
    "ssh_wrapper.sh",
    "rsync_wrapper.sh",
    "curl.BUILD",
    "BUILD.zlib.bazel",
])
